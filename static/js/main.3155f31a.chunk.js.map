{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notofocation.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/data/data.js","components/Notification/Notification.js","components/Statistics/Statistics.jsx","App.js","reportWebVitals.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","style","section","FeedbackOption","options","onLeaveFeedback","map","option","feedback","button","type","data-feedback","onClick","FeedbackBtn","propTypes","PropTypes","arrayOf","string","func","isRequired","Data","Notification","message","Statistics","good","neutral","bad","total","positiveFeedback","list","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedback","Math","round","this","FeedbackOptions","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3155f31a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3Sb-i\",\"item\":\"Statistics_item__aayEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notofocation_message__35Sjs\"};","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={style.section}>\r\n      <h1 className={style.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      className={style.button}\r\n      type=\"button\"\r\n      data-feedback={feedback}\r\n      onClick={onLeaveFeedback}\r\n      key={feedback}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst FeedbackOption = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option =>\r\n    FeedbackBtn({ feedback: option, onLeaveFeedback }),\r\n  );\r\n};\r\n\r\nFeedbackOption.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOption;\r\n","export const Data = ['good', 'neutral', 'bad'];\r\n","import PropTypes from 'prop-types';\r\nimport style from './Notofocation.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={style.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <ul className={style.list}>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive Feedback: {positiveFeedback} %</li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No reviews yet\" />}\r\n    </>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section.jsx';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.jsx';\nimport { Data } from './components/data/data';\nimport Statistics from './components/Statistics/Statistics.jsx';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedback = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    // console.log(this.state);\n    const total = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedback();\n\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Data}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positiveFeedback={positiveFeedback}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3mSNl\",\"title\":\"Section_title__3zNkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__bmROb\"};"],"sourceRoot":""}